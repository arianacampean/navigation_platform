@startuml
set namespaceSeparator ::

' abstract class " apis::api_client.dart::ApiClient" {
'   +Future<List<User>> getAllUsers()
'   +Future<User> addUser()
'   +Future<List<User>> getOneUser()
'   +Future<void> updateUser()
'   +Future<List<Trip>> getAllTrips()
'   +Future<Trip> addTrip()
'   +Future<List<Trip>> getOneTripById()
'   +Future<List<Trip>> getTripsByCountry()
'   +Future<void> deleteTrip()
'   +Future<void> updateTrip()
'   +Future<List<Trip>> getTripsByJourney()
'   +Future<List<Journey>> getAllJourneys()
'   +Future<Journey> addJourney()
'   +Future<List<Journey>> getJourneysById()
'   +Future<List<Journey>> getJourneysByUserId()
'   +Future<void> deleteJouney()
'   +Future<void> updateJouney()
' }

' class " apis::api_client.dart::_ApiClient" {        
'   -Dio _dio
'   +String? baseUrl
'   +Future<List<User>> getAllUsers()
'   +Future<User> addUser()
'   +Future<List<User>> getOneUser()
'   +Future<void> updateUser()
'   +Future<List<Trip>> getAllTrips()
'   +Future<Trip> addTrip()
'   +Future<List<Trip>> getOneTripById()
'   +Future<List<Trip>> getTripsByCountry()
'   +Future<void> deleteTrip()
'   +Future<void> updateTrip()
'   +Future<List<Trip>> getTripsByJourney()
'   +Future<List<Journey>> getAllJourneys()
'   +Future<Journey> addJourney()
'   +Future<List<Journey>> getJourneysById()
'   +Future<List<Journey>> getJourneysByUserId()
'   +Future<void> deleteJouney()
'   +Future<void> updateJouney()
'   -RequestOptions _setStreamType()
' }

' " apis::api_client.dart::_ApiClient" o-- "dio::src::dio.dart::Dio"
' " apis::api_client.dart::ApiClient" <|-- " apis::api_client.dart::_ApiClient"

' class " database::local_database.dart::DBProvider" {
'   {static} +String ID
'   {static} +String NAME
'   {static} +String TABLE
'   +int id
'   {static} +DBProvider db
'   {static} -Database? _database
'   +Future<Database> database
'   -Future<Database> _initDB()
'   -Future<dynamic> _createDB()
'   +Future<dynamic> close()
'   +Future<Photo> save()
'   +Future<Photo> changePhoto()
'   +Future<List<Photo>> getPhotos()
' }

' " database::local_database.dart::DBProvider" o-- " database::local_database.dart::DBProvider"
' " database::local_database.dart::DBProvider" o-- "sqflite_common::sqlite_api.dart::Database"

' class " main.dart::MyApp" {
'   +Widget build()
' }

' " StatelessWidget" <|-- " main.dart::MyApp"

' class " models::directions.dart::Directions" {
'   +LatLngBounds bounds
'   +List<PointLatLng> polylinePoints
'   +String totalDistance
'   +String totalDuration
' }

' " models::directions.dart::Directions" o-- "google_maps_flutter_platform_interface::src::types::location.dart::LatLngBounds"

' class " models::exceptie.dart::Exceptie" {
'   {static} +Exceptie ex
'   +dynamic showAlertDialogExceptions()
' }

' " models::exceptie.dart::Exceptie" o-- " models::exceptie.dart::Exceptie"

' class " models::journey.dart::Journey" {
'   +int? id
'   +int? id_user
'   +DateTime start_date
'   +DateTime end_date
'   +Map<String, dynamic> toJson()
' }

' class " models::photo.dart::Photo" {
'   +int id
'   +String photo_name
'   +Map<String, dynamic> toMap()
'   {static} +Photo fromMap()
' }

' class " models::sizeConf.dart::SizeConfig" {
'   {static} -MediaQueryData? _mediaQueryData
'   {static} +double? screenWidth
'   {static} +double? screenHeight
'   {static} +double? blockSizeHorizontal
'   {static} +double? blockSizeVertical
'   +void init()
' }

' " models::sizeConf.dart::SizeConfig" o-- "flutter::src::widgets::media_query.dart::MediaQueryData"

' class " models::trip.dart::Trip" {
'   +int? id
'   +int? id_journey
'   +double latitude
'   +double longitude
'   +String city
'   +String country
'   +String name
'   +bool visited
'   +String toString()
'   +Map<String, dynamic> toJson()
' }

' class " models::tripDate.dart::TripDate" {
'   +int? id
'   +int? id_journey
'   +double? latitude
'   +double? longitude
'   +String? city
'   +String? country
'   +String? name
'   +bool? visited
'   +DateTime? start_date
'   +DateTime? end_date
' }

' class " models::user.dart::User" {
'   +int? id
'   +String first_name
'   +String last_name
'   +String email
'   +String? password
'   +Map<String, dynamic> toJson()
' }

' class " models::utility.dart::Utility" {
'   {static} +Image imageFromBase64String()
'   {static} +Uint8List dataFromBase64String()
'   {static} +String base64String()
' }

' class "  AppRepository" {
'   ' -ApiClient _apiRequest
'   ' +Dio dio
'   ' +Future<List<User>> getOneUser()
'   ' +Future<dynamic> addUser()
'   ' +Future<dynamic> updateUser()
'   ' +Future<Journey> addJouney()
'   ' +Future<List<Trip>> addTrips()
'   ' +Future<List<Trip>> getallTrips()
'   ' +Future<List<Trip>> getTripsByJouneyId()
'   ' +Future<dynamic> updateTrips()
'   ' +Future<dynamic> updateTrip()
'   ' +Future<dynamic> updateJouneyandTrips()
'   ' +Future<List<Journey>> getJouneysByUserId()
'   ' +Future<List<Journey>> getJouneys()
'   ' +Future<dynamic> deleteTrip()
'   ' +Future<dynamic> deleteTrips()
'   ' +Future<dynamic> deleteJourney()
'   ' +Future<dynamic> deleteJourneyandTrips()
'   ' +Future<List<Trip>> getTripsByCountry()
' }

' "  AppRepository" o-- " apis::api_client.dart::ApiClient"
' "  AppRepository" o-- "dio::src::dio.dart::Dio"

' class " repository::direction_repo.dart::DirectionsRepo" {
'   {static} +String url
'   -Dio _dio
'   +String googleApiKey
'   +Future<Directions?> getDirections()
' }

' " repository::direction_repo.dart::DirectionsRepo" o-- "dio::src::dio.dart::Dio"

' class "  SecurityPage" {
'   +User user
'   +_SecurityPageState createState()
' }


' " StatefulWidget" <|-- "  SecurityPage"

' class "  _SecurityPageState" {
'   ' +String goodInfo
'   ' +Exceptie ex
'   ' +AppRepository appRepository
'   ' -GlobalKey<FormState> _formKey
'   ' +TextEditingController old_pass
'   ' +TextEditingController new_pass
'   ' +TextEditingController new_pass2
'   ' +void initState()
'   ' +Widget build()
' }


"  _SecurityPageState" o-- "  AppRepository"
" State" <|-- "  _SecurityPageState"

' class " LoginForm" {
'   +_LoginFormState createState()
' }

' " StatefulWidget" <|-- " LoginForm"

' class " _LoginFormState" {
'   ' +User user
'   ' +AppRepository appRepository
'   ' +String goodCredentials
'   ' +bool isLoading
'   ' +TextEditingController email
'   ' +TextEditingController pass
'   ' +void initState()
'   ' +Widget build()
' }


" _LoginFormState" o-- "  AppRepository"    
" State" <|-- " _LoginFormState"

' class " AddTrip" {
'   ' +User user
'   ' +int index
'   ' +_AddTripState createState()
' }

' " StatefulWidget" <|-- " AddTrip"        

' class " _AddTripState" {
'   ' +Exceptie ex
'   ' +AppRepository appRepository
'   ' +DateTime selectedDate_to_Start
'   ' +DateTime selectedDate_to_End
'   ' +String dateText
'   ' +String googleApikey
'   ' +GoogleMapController? mapController
'   ' +CameraPosition? cameraPosition
'   ' +LatLng startLocation
'   ' +String location
'   ' +PlacesDetailsResponse detail_for_info
'   ' +bool findPlace
'   ' +double forStart
'   ' +List<Journey> journeys
'   ' +bool isLoading
'   ' +Trip trip
'   ' +List<Trip> trips
'   ' +Journey journey
'   ' +bool noInfo
'   ' +void initState()
'   ' +Future<dynamic> getData()
'   ' +Widget build()
'   ' -dynamic _selectDate()
'   ' +String details_destinations_openingHours()
'   ' +String phone_number()
'   ' +String rating()
'   ' +String buildPhotoURL()
' }


" _AddTripState" o-- "  AppRepository"

" State" <|-- " _AddTripState"

' class "   CurrentTrip" {
'   ' +User user
'   ' +Journey journey
'   ' +List<Trip> trips
'   ' +_CurrentTripState createState()
' }

' " StatefulWidget" <|-- "   CurrentTrip"
' class "_CurrentTripState" {
'   ' +bool isLoading
'   ' +AppRepository appRepository
'   ' +LatLng currentPostion
'   ' -GoogleMapController _controller
'   ' +Marker current_poz
'   ' +Marker destination
'   ' +bool firstMesage
'   ' +List<TripDate> tripdate
'   ' +bool arrivedAtDestination
'   ' +Map<int, int> order
'   ' -Timer _timer
'   ' +Trip trip
'   ' +LatLng coord
'   ' +Directions directions
'   ' +Exceptie ex
'   ' +int index
'   ' +bool readToStart
'   ' -Location _location
'   ' +LatLng finalPosition
'   ' +Timer timer
'   ' +bool stopEntering
'   ' +String mapStyle
'   ' +bool stop
'   ' +void initState()
'   ' -void _arrived()
'   ' +void userAtDestination()
'   ' +void startTimer()
'   ' +Widget build()
'   ' -void _getUserLocation()
'   ' +dynamic addRoute()
'   ' +Trip calculateNextDestination()
'   ' +dynamic calculateRoute()
'   ' +double getDistanceFromLatLonInKm()
'   ' +double deg2rad()
'   ' +void incomplete()
'   ' -Widget _popUpMenuButton()
'   ' +dynamic showAlertDialogExceptions()
'   ' -dynamic _editAlert()
'   ' +String details()
' }

"_CurrentTripState" o-- "  AppRepository"
" State" <|-- "_CurrentTripState"   

' class "   HistoryPage" {
'   ' +User user
'   ' +_HistoryPageState createState()
' }


' " StatefulWidget" <|-- "   HistoryPage"     

' class "   _HistoryPageState" {
'   ' +String dropdownValue
'   ' +bool isLoading
'   ' +Exceptie ex
'   ' +AppRepository appRepository
'   ' +List<Trip> trips
'   ' +List<Journey> journeys
'   ' +void initState()
'   ' +Future<dynamic> getData()
'   ' +List<Trip> getTripByJourney()
'   ' +Widget build()
'   ' +String visited()
'   ' +String getText()
' }


"   _HistoryPageState" o-- "  AppRepository"   
" State" <|-- "   _HistoryPageState"        

' class " ModifyPage" {
'   ' +User user
'   ' +Journey journey
'   ' +List<Trip> trips
'   ' +_ModifyPageState createState()
' }

' " StatefulWidget" <|-- " ModifyPage"       

' class " _ModifyPageState" {
'   ' +String dropdownValue
'   ' +bool isLoading
'   ' +Exceptie ex
'   ' +AppRepository appRepository
'   ' +List<Trip> deletedTrips
'   ' +List<Trip> addedTrips
'   ' +List<TripDate> tripdate
'   ' +List<Journey> journeys
'   ' -int _selectedIndex
'   ' +void initState()
'   ' +Future<dynamic> getData()
'   ' +Widget build()
'   ' -void _onItemTapped()
'   ' +String title_for_list()
'   ' +String dropdown()
'   ' +dynamic showAlertDialog()
'   ' -dynamic _selectDate()
'   ' +bool verifyDate()
' }

" _ModifyPageState" o-- "  AppRepository"     
" State" <|-- " _ModifyPageState"

' class " PrincipalPage" {
'   ' +User user
'   ' +_PrincipalPageState createState()
' }


' " StatefulWidget" <|-- " PrincipalPage"

' class " _PrincipalPageState" {
'   ' +CarouselController buttonCarouselController
'   ' +Exceptie ex
'   ' +AppRepository appRepository
'   ' +String goodCredentials
'   ' +bool isLoading
'   ' +List<Journey> journeys
'   ' +DateTime currentdate
'   ' +Journey currentJourney
'   ' +List<Trip> trips
'   ' +LatLng currentPostion
'   ' +double alt
'   ' +Placemark placemark
'   ' -int _selectedIndex
'   ' +int place
'   ' +void initState()
'   ' +Future<dynamic> getData()
'   ' +dynamic getCoordonates()
'   ' +Future<List<Trip>?> getTripsByJourney()
'   ' +Widget build()
'   ' -void _onItemTapped()
' }


" _PrincipalPageState" o-- "  AppRepository"
" State" <|-- " _PrincipalPageState"

' class " ProfilePage" {
'   ' +User user
'   ' +_ProfilePageState createState()
' }

' " StatefulWidget" <|-- " ProfilePage"

' class " _ProfilePageState" {
'   ' +Future<File> imageFile
'   ' +Image image
'   ' +DBProvider dbHelper
'   ' +Photo photo
'   ' +bool isLoading
'   ' +List<Photo> images
'   ' +String text
'   ' +bool verify
'   ' +TextEditingController first_name
'   ' +TextEditingController last_name
'   ' +TextEditingController email
'   ' +void initState()
'   ' +dynamic refreshImage()
'   ' +Widget build()
'   ' -dynamic _imgFromGallery()
'   ' +dynamic isImage()
'   ' -void _showPicker()
' }

" _ProfilePageState" o-- "  AppRepository"
" State" <|-- " _ProfilePageState"

' class "  RecommendationsPage" {
' '   +User user
' '   +_RecommendationsPageState createState()
' }

' " StatefulWidget" <|-- "  RecommendationsPage" 

' class "  _RecommendationsPageState" {
'   ' +Exceptie ex
'   ' +AppRepository appRepository
'   ' +String goodCredentials
'   ' +bool isLoading
'   ' +List<Journey> journeys
'   ' +DateTime currentdate
'   ' +Journey currentJourney
'   ' +List<Trip> trips
'   ' +List<Trip> recomm
'   ' +int index
'   ' +List<String> countries
'   ' +void initState()
'   ' +Future<dynamic> getData()
'   ' +Future<List<Trip>?> getAllTrips()
'   ' +List<String> getTripsRecom(List<int> similarity)
'   ' +List<String> getSimilarity()
'   ' +List<int> FindSimilarity()
'   ' +Future<List<Journey>?> getAllJourneys() 
'   ' +Map<int, int> getUserId()
'   ' +Widget build()
' }

    
"  _RecommendationsPageState" o-- "  AppRepository"
" State" <|-- "  _RecommendationsPageState"    

' class " RegisterForm" {
'   ' +_RegisterFormState createState()
' }

' " StatefulWidget" <|-- " RegisterForm"

' class "_RegisterFormState" {
'   ' +User user
'   ' +AppRepository appRepository
'   ' +String goodPass
'   ' -GlobalKey<FormState> _formKey
'   ' +TextEditingController first_name
'   ' +TextEditingController last_name
'   ' +TextEditingController email
'   ' +TextEditingController pass
'   ' +TextEditingController pass2
'   ' +void initState()
'   ' +Widget build()
' }
    
"_RegisterFormState" o-- "  AppRepository"
" State" <|-- "_RegisterFormState" 







@enduml